name: MacOS + upstream zlib-ng

on:
  workflow_dispatch:
  # push:
  # pull_request:
  # schedule:
  #   - cron: '01 01 * * 6'    # Run every Saturday

jobs:
  build:

    runs-on: macos-latest

    strategy:
      matrix:
        perl:
          - '5.38'
        zlib-version:
          - 'develop'
          - '2.1.3'
          - '2.1.2'
          - '2.0.7'
          - '2.0.6'
          - '2.0.5'
          - '2.0.4'
          - '2.0.3'
          - '2.0.2'
          - '2.0.1'
          - '2.0.0'
        zlib-native:
          - 1
          - 0

    env:
      zlib-source:      ${{ github.workspace }}/upstream-zlib-source
      zlib-install:     /Users/runner/upstream-zlib-install
      ZLIB_LIB:         /Users/runner/upstream-zlib-install/lib
      ZLIB_INCLUDE:     /Users/runner/upstream-zlib-install/include
      ZLIB_VERSION:     ${{ matrix.zlib-version }}
      BUILD_ZLIB:       0
      ZLIB_NG_PRESENT:  1
      USE_ZLIB_NG:      ${{ matrix.zlib-native }}

    name: Perl ${{ matrix.perl }} with zlib-ng ${{matrix.zlib-version}}  USE_ZLIB_NG=${{ matrix.zlib-native }}
    steps:
    - uses: actions/checkout@v3

    - name: Cache zlib ${{matrix.zlib-version}} ${{ matrix.zlib-native }}
      id: cache-zlib
      uses: actions/cache@v3
      with:
        # NOTE: path doesn't expand variables!
        path: /Users/runner/upstream-zlib-install
        key: ${{ runner.os }}-zlib-ng-${{ matrix.zlib-version }}-${{ matrix.zlib-native }}

    - name: Checkout upstream zlib-ng ${{matrix.zlib-version}}
      if:  ( matrix.zlib-version == 'develop' || steps.cache-zlib.outputs.cache-hit != 'true' )
      uses: actions/checkout@v3
      with:
        repository: zlib-ng/zlib-ng
        ref: ${{ matrix.zlib-version }}
        path: ${{ env.zlib-source }}

    - name: Build zlib-ng ${{matrix.zlib-version}} in zlib-compat mode
      if: ( matrix.zlib-version == 'develop' || steps.cache-zlib.outputs.cache-hit != 'true' ) && ! matrix.zlib-native
      run: |
        ./configure --prefix ${{ env.zlib-install }} --libdir ${{ env.zlib-install }}/lib  --zlib-compat
        make
        make test
        make install
      working-directory: ${{ env.zlib-source }}

    - name: Build zlib-ng ${{matrix.zlib-version}} zlib native mode
      if:  ( matrix.zlib-version == 'develop' || steps.cache-zlib.outputs.cache-hit != 'true' ) && matrix.zlib-native
      run: |
        ./configure --prefix ${{ env.zlib-install }} --libdir ${{ env.zlib-install }}/lib
        make
        make test
        make install
      working-directory: ${{ env.zlib-source }}

    - name: Show ${{ env.zlib-install }}
      run: |
        find ${{ env.zlib-install }}

    - name: Setup perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: ${{ matrix.perl }}

    - name: Perl version
      run: perl -V

    #- name: Install dependencies
    #  run: |
    #    cpanm --verbose --installdeps --notest .

    - name: Build
      run: |
        perl Makefile.PL && make

    - name: Test
      run: make test
