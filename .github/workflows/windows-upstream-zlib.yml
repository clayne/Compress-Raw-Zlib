name: Windows + upstream zlib

on:
  workflow_dispatch:
  push:
  pull_request:
  schedule:
      - cron: '02 02 * * 6'    # Run every Saturday

# upstream build derived from https://github.com/madler/zlib/pull/506


jobs:
  build:

    runs-on: windows-latest

    strategy:
      matrix:
        perl:
          - '5.38'
        zlib-version:
          # - v1.2.13
          # - v1.2.12
          - v1.2.11
          # - develop


    defaults:
      run:
        shell: bash

    name: Perl ${{ matrix.perl }} with zlib ${{matrix.zlib-version}}
    steps:
    - uses: actions/checkout@v3

    - name: Cache zlib ${{matrix.zlib-version}}
      id: cache-zlib
      uses: actions/cache@v3
      with:
        # NOTE: path doesn't expand variables!
        path: upstream-zlib-install
        key: ${{ runner.os }}-zlib-${{ matrix.zlib-version }}

    - name: Set Env
      run: |
        echo 'zlib-source=${{ github.workspace }}\upstream-zlib-source'    >> $GITHUB_ENV
        echo 'zlib-install=${{ github.workspace }}\upstream-zlib-install'  >> $GITHUB_ENV
        # echo 'DESTDIR=${{ github.workspace }}/upstream-zlib-install'       >> $GITHUB_ENV
        echo 'INCLUDE_PATH=/'                      >> $GITHUB_ENV
        echo 'INCLUDE_PATH=/'                      >> $GITHUB_ENV
        echo 'LIBRARY_PATH=/'                      >> $GITHUB_ENV

        echo 'ZLIB_LIB=${{ github.workspace }}\upstream-zlib-install\lib'            >> $GITHUB_ENV
        echo 'ZLIB_INCLUDE=${{ github.workspace }}\upstream-zlib-install\include'    >> $GITHUB_ENV
        echo 'ZLIB_VERSION=${{ matrix.zlib-version }}'         >> $GITHUB_ENV
        echo 'BUILD_ZLIB=0'                                    >> $GITHUB_ENV
        echo 'ZLIB_NG_PRESENT=0'                               >> $GITHUB_ENV
      shell: bash

    - name: Set GITHUB_WORKSPACE_UNIX
      run: |
        perl -e '$a = shift; $a =~ s#^(.):#q[/] . lc($1) #e; $a =~ s#\\#/#g; print qq[GITHUB_WORKSPACE_UNIX=$a\n]' '${{ github.workspace }}' >> $GITHUB_ENV
      shell: bash

    - name: Set Unix Env
      run: |
        # echo 'DESTDIR=${{ env.GITHUB_WORKSPACE_UNIX }}/upstream-zlib-install'       >> $GITHUB_ENV
        # echo 'ZLIB_LIB=${{ env.GITHUB_WORKSPACE_UNIX }}/upstream-zlib-install/lib'            >> $GITHUB_ENV
        # echo 'ZLIB_INCLUDE=${{ env.GITHUB_WORKSPACE_UNIX }}/upstream-zlib-install/include'    >> $GITHUB_ENV
      shell: bash

    - name: Checkout upstream zlib ${{matrix.zlib-version}}
      if:  ( matrix.zlib-version == 'develop' || steps.cache-zlib.outputs.cache-hit != 'true' )
      uses: actions/checkout@v3
      with:
        repository: madler/zlib
        ref: ${{ matrix.zlib-version }}
        path: ${{ env.zlib-source }}

    # - name: Build zlib ${{matrix.zlib-version}}
    #   if: ( matrix.zlib-version == 'develop' || steps.cache-zlib.outputs.cache-hit != 'true' )
    #   run: |
    #     make -f win32/Makefile.gcc
    #     make -f win32/Makefile.gcc test
    #     make -f win32/Makefile.gcc install SHARED_MODE=1
    #   working-directory: ${{ env.zlib-source }}
    #   shell: bash

    
    # -D CMAKE_C_COMPILER=gcc \
    # -D BUILD_SHARED_LIBS='ON'

    - name: Build zlib ${{matrix.zlib-version}}
      if: ( matrix.zlib-version == 'develop' || steps.cache-zlib.outputs.cache-hit != 'true' )
      run: |
        cmake -S . -B . \
          -G Ninja \
          -D CMAKE_INSTALL_PREFIX='${{ env.zlib-install }}' \
          -D CMAKE_BUILD_TYPE=Release \
          -D BUILD_SHARED_LIBS='ON' \

        cmake --build . --config Release
        ctest -C Release --output-on-failure --max-width 120
        cmake --install .
      working-directory: ${{ env.zlib-source }}
      shell: bash


     - name: find DESTDIR
      run: |
        find $DESTDIR
      shell: bash

    - name: Setup perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: ${{ matrix.perl }}

    - name: Perl version
      run: perl -V
      shell: cmd

    #- name: Install dependencies
    #  run: |
    #    cpanm --verbose --installdeps --notest .

    # - name: Set Env Windows
    #   run: |
    #     echo "ZLIB_LIB=${{ github.workspace }}\upstream-zlib-install\lib"            >> $GITHUB_ENV
    #     echo "ZLIB_INCLUDE=${{ github.workspace }}\upstream-zlib-install\include"    >> $GITHUB_ENV
    #     echo "ZLIB_VERSION=${{ matrix.zlib-version }}"         >> $GITHUB_ENV
    #     echo "BUILD_ZLIB=0"                                    >> $GITHUB_ENV
    #     echo "ZLIB_NG_PRESENT=0"                               >> $GITHUB_ENV
    #     echo ${{ github.workspace }}\upstream-zlib-install\lib                       >> $GITHUB_PATH
    #   shell: cmd

    - name: Build
      run: |
        perl Makefile.PL && make
      shell: cmd

    - name: Test
      run: make test TEST_VERBOSE=1
      shell: cmd
